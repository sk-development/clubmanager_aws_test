AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters: 
  # TableNameSurveys: 
  #   Type: String
  LambdaExecutionRole: 
    Type: String
  LocalEndpoint: 
    Type: String
    Default: AWS::NoValue
  DeploymentBucket:
    Type: String
Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS, POST, GET, PUT, DELETE'"
      AllowHeaders: "'Content-Type, x-apikey, x-tenantid'"
      AllowOrigin: "'http://localhost:4200'"
Resources:
  SurveysTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: Number
    #   TableName: 
    #       Ref: TableNameSurveys
  SurveysAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      # Cors:
      #   AllowMethods: "'OPTIONS,POST,GET'"
      #   AllowHeaders: "'Content-Type, x-apikey, x-tenantid'"
      #   AllowOrigin: "'http://localhost:4200'"
      #   MaxAge: "'3600'"
      #   AllowCredentials: True
      # DefinitionBody:
      #   Fn::Transform:
      #     Name: AWS::Include
      #     Parameters:
      #       # Location: !Sub s3://${DeploymentBucket}/openapi.yaml #for production: TODO create s3 bucket with name 'DeploymentBucket' and put openapi.yaml file in it
      #       Location: openapi_two.yaml #for local development
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        Authorizers:
          LambdaAuthorizer:
            FunctionArn: !GetAtt LambdaAuthorizer.Arn
  GetSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_get_surveys
        Handler: index.handler
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          GetSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: get
  PutSurvey:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_create_survey
        Handler: index.handler
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          PutSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: post
  DeleteSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_delete_survey
        Handler: index.handler
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          DeleteSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: delete
  UpdateSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_update_survey
        Handler: index.handler
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          UpdateSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: put
  LambdaAuthorizer:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_authorizer
        Handler: index.handler
        Role:
          Ref: LambdaExecutionRole