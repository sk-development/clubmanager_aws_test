AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters: 
  LambdaExecutionRole: 
    Type: String
  LocalEndpoint: 
    Type: String
    Default: AWS::NoValue
  AuthHost:
    Type: String
  AuthToken:
    Type: String
Outputs:
  SurveysAPIUrl:
    Value: !Sub "https://${SurveysAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS, POST, GET, PUT, DELETE'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Environment:
      Variables:
        AWS: true
Resources:
  SurveysTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
  ParticipationsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: participationId
        Type: String
  SurveysAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration:
        Type: REGIONAL
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          LambdaAuthorizer:
            FunctionArn: !GetAtt LambdaAuthorizer.Arn
            Identity:
              Header: x-apikey
              ReauthorizeEvery: 0
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: common-dependencies
        Description: Common dependencies
        ContentUri: src/layers/
        CompatibleRuntimes:
          - nodejs12.x
        RetentionPolicy: Retain            
  GetSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_get_surveys
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          GetSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: get
          GetSurvey:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys/{surveyID}
              Method: get
  PutSurvey:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_create_survey
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          PutSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys
              Method: post
  DeleteSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_delete_survey
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          DeleteSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys/{surveyID}
              Method: delete
  UpdateSurveys:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_update_survey
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref SurveysTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          UpdateSurveys:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /surveys/{surveyID}
              Method: put
  GetParticipations:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_get_participations
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref ParticipationsTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          GetAllParticipations:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations
              Method: get
          GetUserParticipations:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations/user/{userID}
              Method: get
          GetSurveyParticipations:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations/survey/{surveyID}
              Method: get
          GetParticipationById:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations/participationId/{participationID}
              Method: get
  PutParticipation:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_create_participation
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref ParticipationsTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          PutParticipation:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations
              Method: post
  UpdateParticipation:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_update_participation
        Handler: index.handler
        Layers:
          - !Ref CommonLayer
        Environment:
          Variables:
            TABLE_NAME: !Ref ParticipationsTable
            LOCAL_ENDPOINT: !Ref LocalEndpoint
        Role:
          Ref: LambdaExecutionRole
        Events:
          UpdateSingleParticipation:
            Type: Api
            Properties:
              RestApiId: !Ref SurveysAPI
              Path: /participations/{participationID}
              Method: put
  LambdaAuthorizer:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: nodejs12.x
        CodeUri: ./src/lambda_authorizer
        Handler: index.handler
        Role:
          Ref: LambdaExecutionRole
        Environment:
          Variables:
            HOST:
              Ref: AuthHost
            XACCESSTOKEN:
              Ref: AuthToken